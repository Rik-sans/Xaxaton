import streamlit as st
import requests
import json

def extract_text_from_json(json_data):
    # –ï—Å–ª–∏ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - —Å—Ç—Ä–æ–∫–∞ JSON, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Ö –≤ —Å–ª–æ–≤–∞—Ä—å
    if isinstance(json_data, str):
        data = json.loads(json_data)
    else:
        data = json_data

    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã JSON
    try:
        # –ü—É—Ç—å –∫ —Ç–µ–∫—Å—Ç—É –≤ –¥–∞–Ω–Ω–æ–º JSON
        text = data['outputs'][0]['outputs'][0]['results']['message']['text']
        return text
    except (KeyError, IndexError) as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞: {e}")
        return None

st.title("ü§ñ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –±–æ—Ç")
st.write("–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –±–æ—Ç—É")

user_input = st.text_input("–ù–∞–ø—Ä–∏–º–µ—Ä: '–ö–∞–∫ –ø–æ—á–∏—Å—Ç–∏—Ç—å –º–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫—É?'")

api_key = "sk-15alwW6Kx9uZ1R5EUZxOZ2gVjIBUYgl5Nm-JaSqVGeg"
url = "http://localhost:7860/api/v1/run/f4db2ca5-cfcf-4ce6-bd1d-bcd7ee9b5f13"

if st.button("–í–≤–æ–¥"):
    payload = {
        "output_type": "text",
        "input_type": "text",
        "input_value": user_input
    }

    print(payload)

    headers = {
        "Content-Type": "application/json",
        "x-api-key": "sk-15alwW6Kx9uZ1R5EUZxOZ2gVjIBUYgl5Nm-JaSqVGeg"  # Authentication key from environment variable
    }
    try:
        response = requests.request("POST", url, json=payload, headers=headers)
        # response = requests.post(url)
        response.raise_for_status()  # Raise exception for bad status codes
        if response.text:
            try:
                result = response.json()
                st.text(extract_text_from_json(result))
            except ValueError:
                st.text(response.text)
        else:
            st.warning("–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")


    except requests.exceptions.HTTPError as e:
        st.error(f"HTTP –æ—à–∏–±–∫–∞: {e.response.status_code} - {e.response.text}")
    except requests.exceptions.RequestException as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}")
    except Exception as e:
        st.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
